name: Docker CI

on:
  push:
    branches:
      - main
  release:
    types: [published]

env:
  DOCKERHUB_REPO: carpentries/workbench-docker

jobs:
  build-amd64:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.DOCKERHUB_REPO }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Image (AMD64)
        id: build_amd64
        uses: docker/build-push-action@v6
        with:
          platforms: linux/amd64
          outputs: |
            type=image,"name=${{ env.DOCKERHUB_REPO }}",name-canonical=true
            type=docker,dest=${{ runner.temp }}/workbench-amd64.tar
          push: false
          tags: ${{ env.DOCKERHUB_REPO }}:amd64
          cache-to: ${{ (github.event_name == 'push' || github.event_name == 'release') && 'type=gha,mode=max,scope=amd64' || '' }}
          cache-from: type=gha,scope=amd64

      - name: Export digest
        run: |
          mkdir -p ${{ runner.temp }}/digests
          digest="${{ steps.build_amd64.outputs.digest }}"
          touch "${{ runner.temp }}/digests/${digest#sha256:}"
          ls -lAh "${{ runner.temp }}/digests"
          echo "IMAGE_DIGEST_AMD64=$digest" >> $GITHUB_ENV

      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests-amd64
          path: ${{ runner.temp }}/digests/*
          if-no-files-found: error
          retention-days: 1

      - name: Upload Tarball as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: docker-amd64
          path: ${{ runner.temp }}/workbench-amd64.tar
          retention-days: 1

  build-arm64:
    if: (github.event_name == 'release' || (startsWith(github.ref_name, 'release-') && github.event_name == 'push')) && github.repository == 'carpentries/workbench-docker'
    runs-on: ubuntu-24.04-arm
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.DOCKERHUB_REPO }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Image (ARM64)
        id: build_arm64
        uses: docker/build-push-action@v6
        with:
          platforms: linux/arm64
          outputs: |
            type=image,"name=${{ env.DOCKERHUB_REPO }}",name-canonical=true
            type=docker,dest=${{ runner.temp }}/workbench-arm64.tar
          push: false
          tags: ${{ env.DOCKERHUB_REPO }}:arm64
          cache-to: type=gha,mode=max,scope=arm64
          cache-from: type=gha,scope=arm64

      - name: Export digest
        run: |
          mkdir -p ${{ runner.temp }}/digests
          digest="${{ steps.build_arm64.outputs.digest }}"
          touch "${{ runner.temp }}/digests/${digest#sha256:}"
          ls -lAh "${{ runner.temp }}/digests"
          echo "IMAGE_DIGEST_ARM64=$digest" >> $GITHUB_ENV

      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests-arm64
          path: ${{ runner.temp }}/digests/*
          if-no-files-found: error
          retention-days: 1

      - name: Upload Tarball as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: docker-arm64
          path: ${{ runner.temp }}/workbench-arm64.tar
          retention-days: 1

  push-test:
    if: github.event_name == 'release' || (startsWith(github.ref_name, 'release-') && github.event_name == 'push') && github.repository == 'carpentries/workbench-docker'
    needs:
      - build-amd64
    permissions:
      checks: write
      contents: write
      pages: write
    strategy:
      fail-fast: false
      matrix:
        lesson: [carpentries/instructor-training, swcarpentry/shell-novice, datacarpentry/ecology-workshop, carpentries/sandpaper-docs]
        include:
          - lesson: carpentries/instructor-training
            lesson-name: Instructor Training
          - lesson: swcarpentry/shell-novice
            lesson-name: Shell Novice
          - lesson: datacarpentry/ecology-workshop
            lesson-name: Ecology Workshop
          - lesson: carpentries/sandpaper-docs
            lesson-name: Workbench Documentation

    name: ${{ matrix.lesson-name }}
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash # forces 'Git for Windows' on Windows
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      RENV_PATHS_ROOT: ~/.local/share/renv/
    steps:
      - name: Checkout Lesson
        if: "${{ matrix.lesson != '' }}"
        uses: actions/checkout@v4
        with:
          repository: ${{ matrix.lesson }}
          path: lesson_tmp

      - name: Set Permissions for Lesson Dir
        run: |
          chmod -R 777 ${{ github.workspace }}/lesson_tmp
          ls -lAh ${{ github.workspace }}/lesson_tmp

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: docker-amd64
          path: ${{ runner.temp }}

      - name: Load image
        run: |
          docker load --input ${{ runner.temp }}/workbench-amd64.tar
          docker image ls -a

      - name: Run Tests on ${{ matrix.lesson }}
        run: |
          docker run --rm \
          -v ${{ github.workspace }}/lesson_tmp:/home/rstudio/lesson \
          -w /home/rstudio/lesson \
          ${{ env.DOCKERHUB_REPO }}:amd64 \
          /bin/bash -c "/home/rstudio/.workbench/lesson_pre_prep.sh"

  publish-test:
    if: github.event_name == 'release' && github.repository == 'carpentries/workbench-docker'
    needs:
      - build-amd64
      - push-test
    permissions:
      checks: write
      contents: write
      pages: write
    strategy:
      fail-fast: false
      matrix:
        lesson: [datacarpentry/r-socialsci]
        include:
          - lesson: datacarpentry/r-socialsci
            lesson-name: R for Social Scientists

    name: ${{ matrix.lesson-name }}
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash # forces 'Git for Windows' on Windows
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      RENV_PATHS_ROOT: ~/.local/share/renv/
    steps:
      - name: Checkout Lesson
        if: "${{ matrix.lesson != '' }}"
        uses: actions/checkout@v4
        with:
          repository: ${{ matrix.lesson }}
          path: lesson_tmp

      - name: Set Permissions for Lesson Dir
        run: |
          chmod -R 777 ${{ github.workspace }}/lesson_tmp
          ls -lAh ${{ github.workspace }}/lesson_tmp

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: docker-amd64
          path: ${{ runner.temp }}

      - name: Load image
        run: |
          docker load --input ${{ runner.temp }}/workbench-amd64.tar
          docker image ls -a

      - name: Run Tests on ${{ matrix.lesson }}
        run: |
          docker run --rm \
          -v ${{ github.workspace }}/lesson_tmp:/home/rstudio/lesson \
          -w /home/rstudio/lesson \
          ${{ env.DOCKERHUB_REPO }}:amd64 \
          /bin/bash -c "/home/rstudio/.workbench/lesson_pre_prep.sh"

  publish-amd64:
    if: github.event_name == 'release' && github.repository == 'carpentries/workbench-docker'
    needs:
      - build-amd64
      - push-test
      - publish-test
    runs-on: ubuntu-latest
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.DOCKERHUB_REPO }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Push AMD64 image
        uses: docker/build-push-action@v6
        with:
          platforms: linux/amd64
          push: true
          labels: ${{ steps.meta.outputs.labels }}
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=gha,scope=amd64

  publish-arm64:
    if: github.event_name == 'release' && github.repository == 'carpentries/workbench-docker'
    needs:
        - build-arm64
        - publish-test
    runs-on: ubuntu-latest
    steps:
        - name: Login to Docker Hub
          uses: docker/login-action@v3
          with:
            username: ${{ vars.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKERHUB_TOKEN }}

        - name: Docker meta
          id: meta
          uses: docker/metadata-action@v5
          with:
            images: |
              ${{ env.DOCKERHUB_REPO }}

        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v3

        - name: Push ARM64 image
          uses: docker/build-push-action@v6
          with:
            platforms: linux/arm64
            push: true
            labels: ${{ steps.meta.outputs.labels }}
            tags: ${{ steps.meta.outputs.tags }}
            cache-from: type=gha,scope=arm64

  merge:
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.repository == 'carpentries/workbench-docker'
    needs:
      - publish-amd64
      - publish-arm64
    steps:
      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: ${{ runner.temp }}/digests
          pattern: digests-*
          merge-multiple: true

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.DOCKERHUB_REPO }}
          tags: |
            type=ref,event=tag
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=semver,pattern=latest,enable={{is_default_branch}}
            type=sha

      - name: Create manifest list and push
        working-directory: ${{ runner.temp }}/digests
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf '${{ env.DOCKERHUB_REPO }}@sha256:%s ' *)

      - name: Inspect image
        run: |
          docker buildx imagetools inspect ${{ env.DOCKERHUB_REPO }}:${{ steps.meta.outputs.version }}
